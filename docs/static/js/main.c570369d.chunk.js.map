{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GiftGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","response","json","data","gifts","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GiftExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAc5C,OACI,0BAAMC,SARW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,GACzBR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,SAK5C,2BACIC,KAAK,OACLC,MAAOT,EACPU,SAhBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,gDACiCC,UAAUH,GAD3C,+DAGGI,MAAMF,GAHT,cAGdG,EAHc,gBAIQA,EAJR,8BAIkBC,OAJlB,uBAIbC,EAJa,EAIbA,KAEDC,EAAQD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC1B,MAAQ,CACJC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAcbM,GAda,4CAAH,sDCERO,EAAe,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACjC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCDHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAH0B,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WACNxB,EAASC,GACJwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGrB,CAACpB,IAEGqB,EDbiBK,CAAa1B,GAA9BO,EAD4B,EAC5BA,KAAMa,EADsB,EACtBA,QAEb,OACI,oCACI,wBAAIJ,UAAU,yCAAyChB,GACtDoB,GAAW,yCACZ,yBAAKJ,UAAU,aAEPT,EAAKE,KAAI,SAAAC,GAAG,OACR,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IAELD,UEdnBkB,EAAgB,WAAO,IAAD,EACK1C,mBAAS,CAAC,WADf,mBACxBQ,EADwB,KACZT,EADY,KAO/B,OACI,oCACI,+CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEQS,EAAWe,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,SAAUA,U,MCftC6B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.c570369d.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport { PropTypes } from \"prop-types\";\n\nexport const AddCategory = ({setCategories}) => {\n    const [inputValue, setInputValue] = useState(\"\")\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) =>Â {\n        e.preventDefault();\n\n        if (inputValue.trim().length>2)\n            setCategories(categories => [inputValue, ...categories]);\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifts = async (category) => {\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=h3k9Xgr9gHIyDWpHQr97XGP6YN9ZfVAN`;\n    \n    const response = await fetch(url);\n    const {data} = await (await response).json();\n\n    const gifts = data.map(img => {\n        return ({\n            id:img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        });\n    });\n\n    return gifts;\n}","import React from 'react';\n\nexport const GiftGridItem = ({title, url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react' // , { useState, useEffect }\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GiftGridItem } from './GiftGridItem';\n\n\nexport const GifGrid = ({category}) => {\n    const {data, loading} = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"card animate__animated animate__flash\">{category}</h3>\n            {loading && <p>Loading...</p>}\n            <div className=\"card-grid\">\n                {\n                    data.map(img => \n                        <GiftGridItem \n                            key={img.id}\n                            // img={img} \n                            {...img}\n                        />\n                    )\n                }\n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifts } from \"../helpers/getGifts\";\n\nexport const useFetchGifs = (category) => {\n    const [state, setstate] = useState({\n        data:[],\n        loading:true\n    });\n\n    useEffect(() => {\n        getGifts(category)\n            .then(imgs => {\n                setstate({\n                    data:imgs,\n                    loading:false\n                });\n            });\n    }, [category]);\n\n    return state;\n}","import React, {useState} from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GiftExpertApp = () => {\n    const [categories, setCategories] = useState(['Batman'])\n\n    const handleAdd = () => {\n        setCategories([...categories, 'ASAM']);\n    }\n\n    return (\n        <>\n            <h2>Gift Expert App</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr />\n            <ol>\n                {\n                    categories.map(category => \n                        <GifGrid \n                            key={category} \n                            category={category}\n                        />\n                    )\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GiftExpertApp } from \"./GiftExpertApp\";\nimport './index.css';\n\nReactDOM.render(\n  <GiftExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}